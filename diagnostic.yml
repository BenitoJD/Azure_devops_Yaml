trigger: none

name: Variable Group Diagnostic Pipeline

variables:
  - group: SIT_FT1
  - group: SIT_FT2
  - group: SIT_FT3
  - group: SIT_R1

pool:
  vmImage: 'windows-latest'

jobs:
- job: Diagnostic
  displayName: 'üîç Variable Group Diagnostic'
  steps:
  - task: PowerShell@2
    displayName: 'üîç Show All Environment Variables'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "================================================" -ForegroundColor Cyan
        Write-Host "üîç VARIABLE GROUP DIAGNOSTIC PIPELINE" -ForegroundColor Cyan
        Write-Host "================================================" -ForegroundColor Cyan
        
        # Show ALL environment variables
        Write-Host "`nüîç ALL ENVIRONMENT VARIABLES:" -ForegroundColor Yellow
        Write-Host "Total environment variables: $((Get-ChildItem Env:).Count)" -ForegroundColor Cyan
        
        Get-ChildItem Env: | ForEach-Object {
            Write-Host "   $($_.Name) = $($_.Value)" -ForegroundColor Gray
        }
        
        # Show variables that might be related to our variable groups
        Write-Host "`nüîç VARIABLES CONTAINING 'SIT':" -ForegroundColor Yellow
        $sitVariables = Get-ChildItem Env: | Where-Object { $_.Name -like "*SIT*" }
        if ($sitVariables.Count -eq 0) {
            Write-Host "   ‚ö†Ô∏è  No variables found containing 'SIT'" -ForegroundColor Red
        } else {
            $sitVariables | ForEach-Object {
                Write-Host "   $($_.Name) = $($_.Value)" -ForegroundColor Green
            }
        }
        
        # Show variables that might be related to our variable groups
        Write-Host "`nüîç VARIABLES CONTAINING 'FT':" -ForegroundColor Yellow
        $ftVariables = Get-ChildItem Env: | Where-Object { $_.Name -like "*FT*" }
        if ($ftVariables.Count -eq 0) {
            Write-Host "   ‚ö†Ô∏è  No variables found containing 'FT'" -ForegroundColor Red
        } else {
            $ftVariables | ForEach-Object {
                Write-Host "   $($_.Name) = $($_.Value)" -ForegroundColor Green
            }
        }
        
        # Show variables that might be related to our variable groups
        Write-Host "`nüîç VARIABLES CONTAINING 'R1':" -ForegroundColor Yellow
        $r1Variables = Get-ChildItem Env: | Where-Object { $_.Name -like "*R1*" }
        if ($r1Variables.Count -eq 0) {
            Write-Host "   ‚ö†Ô∏è  No variables found containing 'R1'" -ForegroundColor Red
        } else {
            $r1Variables | ForEach-Object {
                Write-Host "   $($_.Name) = $($_.Value)" -ForegroundColor Green
            }
        }
        
        # Test our variable group detection logic
        Write-Host "`nüîç TESTING VARIABLE GROUP DETECTION:" -ForegroundColor Yellow
        $allVarGroups = @("SIT_FT1", "SIT_FT2", "SIT_FT3", "SIT_R1")
        
        foreach ($varGroup in $allVarGroups) {
            Write-Host "`nüì¶ Variable Group: $varGroup" -ForegroundColor Yellow
            Write-Host "   Looking for variables with prefix: $varGroup." -ForegroundColor Gray
            
            $groupVariables = @{}
            $varGroupPrefix = "$varGroup."
            
            # Get all environment variables that start with this variable group name
            Get-ChildItem Env: | Where-Object { 
                $_.Name -like "$varGroupPrefix*" -and 
                $_.Value -and 
                $_.Value.Trim() -ne "" 
            } | ForEach-Object {
                $varName = $_.Name.Substring($varGroupPrefix.Length)
                $varValue = $_.Value
                $groupVariables[$varName] = $varValue
                Write-Host "   ‚úÖ Found: $varName = $varValue" -ForegroundColor Green
            }
            
            if ($groupVariables.Count -eq 0) {
                Write-Host "   ‚ö†Ô∏è  No variables found for $varGroup" -ForegroundColor Red
            } else {
                Write-Host "   üìä Total variables found: $($groupVariables.Count)" -ForegroundColor Cyan
            }
        }
        
        Write-Host "`n================================================" -ForegroundColor Cyan
        Write-Host "üîç DIAGNOSTIC COMPLETE" -ForegroundColor Cyan
        Write-Host "================================================" -ForegroundColor Cyan
